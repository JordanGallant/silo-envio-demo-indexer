type Silo_Approval {
  id: ID!
  owner: String!
  spender: String!
  value: BigInt!
}

type Silo_DelegateChanged {
  id: ID!
  delegator: String!
  fromDelegate: String!
  toDelegate: String!
}

type Silo_DelegateVotesChanged {
  id: ID!
  delegate: String!
  previousBalance: BigInt!
  newBalance: BigInt!
}

type Silo_OwnershipTransferred {
  id: ID!
  previousOwner: String!
  newOwner: String!
}

type Silo_Transfer {
  id: ID!
  from: String!
  to: String!
  value: BigInt!
}

